version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=ApiTestKey123!
      - MSSQL_PID=Express              # Definir la edici√≥n de SQL Server
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql  # Persistencia de datos
    healthcheck:
      test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd", "-U", "sa", "-P", "ApiTestKey123!", "-Q", "SELECT 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile  # Ruta al Dockerfile
    depends_on:
      - sqlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=IncidentsDB;User Id=sa;Password=ApiTestKey123!;TrustServerCertificate=True;
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:80/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "5000:80"
    networks:
      - app-network

  frontend:
    build:
      context: ./TicketFrontend
      dockerfile: Dockerfile  # Ruta al Dockerfile
    depends_on:
      - backend
    ports:
      - "7070:80"
    networks:
      - app-network

volumes:
  sqlserver_data:

networks:
  app-network:
    driver: bridge